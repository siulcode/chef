<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.9.1">
      <projectUrl>https://github.dowjones.net/DevOps-Cookbooks/cookbook-test/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.2.5">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>git@github.dowjones.net:DevOps-Cookbooks/cookbook-test.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${sha1}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
      <hudson.plugins.git.extensions.impl.PreBuildMerge>
        <options>
          <mergeRemote></mergeRemote>
          <mergeTarget>master</mergeTarget>
          <mergeStrategy>default</mergeStrategy>
        </options>
      </hudson.plugins.git.extensions.impl.PreBuildMerge>
      <hudson.plugins.git.extensions.impl.CleanCheckout/>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <org.jenkinsci.plugins.ghprb.GhprbTrigger plugin="ghprb@1.15-1">
      <spec>*/5 * * * *</spec>
      <adminlist></adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>false</allowMembersOfWhitelistedOrgsAsAdmin>
      <orgslist></orgslist>
      <cron>*/5 * * * *</cron>
      <triggerPhrase></triggerPhrase>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>true</useGitHubHooks>
      <permitAll>true</permitAll>
      <commentFilePath></commentFilePath>
      <whitelist></whitelist>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <whiteListTargetBranches>
        <org.jenkinsci.plugins.ghprb.GhprbBranch>
          <branch></branch>
        </org.jenkinsci.plugins.ghprb.GhprbBranch>
      </whiteListTargetBranches>
      <project>cookbook-test</project>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>/usr/local/rbenv/shims/foodcritic .&#10;
echo &quot;SUCCESS&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.git.GitPublisher plugin="git@2.2.5">
      <configVersion>2</configVersion>
      <pushMerge>true</pushMerge>
      <pushOnlyIfSuccess>true</pushOnlyIfSuccess>
      <branchesToPush>
        <hudson.plugins.git.GitPublisher_-BranchToPush>
          <targetRepoName>origin</targetRepoName>
          <branchName>master</branchName>
        </hudson.plugins.git.GitPublisher_-BranchToPush>
      </branchesToPush>
    </hudson.plugins.git.GitPublisher>
    <hudson.plugins.postbuildtask.PostbuildTask plugin="postbuild-task@1.8">
      <tasks>
        <hudson.plugins.postbuildtask.TaskProperties>
          <logTexts>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText>git push git@github.dowjones.net:DevOps-Cookbooks</logText>
              <operator>AND</operator>
            </hudson.plugins.postbuildtask.LogProperties>
          </logTexts>
          <EscalateStatus>false</EscalateStatus>
          <RunIfJobSuccessful>true</RunIfJobSuccessful>
          <script>GIT_REPO=$(basename ${GIT_URL})&#10;
echo $GIT_REPO&#10;
&#10;
COOKBOOKNAME=$(echo ${GIT_REPO} | cut -d &apos;.&apos; -f1)&#10;
echo $COOKBOOKNAME&#10;
&#10;
git clone $GIT_URL&#10;
cd $COOKBOOKNAME&#10;
/usr/local/rbenv/shims/knife spork bump $COOKBOOKNAME -o $WORKSPACE -p&#10;
&#10;
NEWVER=$( awk &apos;/^version/ { $1=&quot;&quot;; print $0; exit}&apos; metadata.rb )&#10;
&#10;
/usr/local/rbenv/shims/berks install&#10;
/usr/local/rbenv/shims/berks upload -c ~/.berkshelf/djin/djin.config.json&#10;
git add metadata.rb&#10;
git commit -a -m &quot;Version ${NEWVER}&quot;&#10;
git tag $NEWVER&#10;
git push --tags origin master &#10;
</script>
        </hudson.plugins.postbuildtask.TaskProperties>
      </tasks>
    </hudson.plugins.postbuildtask.PostbuildTask>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.38.2">
      <recipientList>EMAIL</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
          <email>
            <recipientList>EMAIL</recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders/>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>true</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <attachBuildLog>true</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <saveOutput>false</saveOutput>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.23">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.14">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>3</timeoutMinutes>
      </strategy>
      <operationList/>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>